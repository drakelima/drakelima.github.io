{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'; \nimport { Todo } from './todo';\nimport { TodoService  } from './todo.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  todos: Todo[] = []\n\n  form: FormGroup = new FormGroup({\n    description: new FormControl('', [Validators.required, Validators.minLength(4)])\n  })\n\n  constructor(\n    private service: TodoService\n  ){}\n\n  ngOnInit(){\n    this.listarTodos()\n  }\n\n  listarTodos(){\n    this.service.listar().subscribe(todoList => this.todos = todoList)\n  }\n\n  submit(){\n    const todo: Todo = { ...this.form.value }\n    this.service.salvar(todo).subscribe(savedTodo => \n      {\n        this.todos.push(savedTodo)\n        this.form.reset()\n      }  \n    )\n  }\n\n  delete(todo: Todo){\n    this.service.deletar(todo.id).subscribe({\n      next: (response) => this.listarTodos()\n    })\n  }\n\n  done(todo: Todo){\n    this.service.marcarComoConcluido(todo.id).subscribe({\n      next: (ResponseAtualizado) => {\n        todo.done = ResponseAtualizado.done\n        todo.doneDate = ResponseAtualizado.doneDate\n      }\n    })\n  }\n\n}\n","<h3>Todos</h3>\n<hr />\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\" >\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <input type=\"text\" class=\"form-control\" formControlName=\"description\" />\n    </div>\n    <div class=\"col-md-2\">\n      <button type=\"submit\" class=\"btn btn-primary\"[disabled]=\"!form.get('description').valid\" >Add</button>\n    </div>\n  </div>\n</form>\n<hr />\n<div class=\"row\">\n  <div class=\"col-md-7\">\n    <ul class=\"list-group\">\n      <li *ngFor=\"let todo of todos\" class=\"list-group-item d-flex justifiy-content-between align-items-center\">\n        <span class=\"{{ todo.done ? 'done' : '' }}\">{{ todo.description }} {{ todo.doneDate }} </span> \n        <div class=\"btn-group\">\n          <button class=\"btn btn-success\" [disabled]=\"todo.done\" (click)=\"done(todo)\" >Done</button>\n          <button class=\"btn btn-danger\" (click)=\"delete(todo)\" >Delete</button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Todo } from './todo';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  apiURL: string = environment.apiURL;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n  \n  salvar(todo: Todo) : Observable<Todo> {\n    return this.http.post<Todo>(this.apiURL, todo)\n  }\n\n  listar() : Observable<Todo[]>{\n    return this.http.get<Todo[]>(this.apiURL)\n  }\n\n  deletar(id: number) : Observable<void>{\n\n    //usando template string\n    const url = `${this.apiURL}/${id}`;\n\n    //usando concatenação\n    //const url = this.apiURL + '/' + id;\n    return this.http.delete<void>(url)\n  }\n\n  marcarComoConcluido(id: number) : Observable<Todo> {\n    const url = `${this.apiURL}/${id}/done`;\n    return this.http.patch<Todo>(url, {})\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}